% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_ggproto_visualize.r
\name{proto_density}
\alias{proto_density}
\alias{proto_density1d}
\alias{proto_point.1d_fix_y}
\title{Tour proto for data, 1D density, with rug marks}
\usage{
proto_density(
  aes_args = list(),
  identity_args = list(alpha = 0.7),
  data = NULL,
  density_position = c("identity", "stack", "fill"),
  do_add_rug = TRUE
)

proto_point.1d_fix_y(
  aes_args = list(),
  identity_args = list(),
  data = NULL,
  fixed_y
)
}
\arguments{
\item{aes_args}{A list of aesthetic arguments to passed to
\verb{geom_point(aes(X)}. Any mapping of the data to an aesthetic,
for example, \code{geom_point(aes(color = myCol, shape = myCol))} becomes
\code{aes_args = list(color = myCol, shape = myCol)}.}

\item{identity_args}{A list of static, identity arguments passed into
\code{geom_point()}, but outside of \code{aes()}, for instance
\code{geom_point(aes(...), size = 2, alpha = .7)} becomes
\code{identity_args = list(size = 2, alpha = .7)}.}

\item{data}{Optionally pass a dataframe to this proto, superceeds data
passed to \code{ggtour}. Analogous to ggplot2 where data passed into a \verb{geom_*}
is used independent of data passed to \code{ggplot}.}

\item{density_position}{The \code{ggplot2} position of \code{geom_density()}. Either
c("identity", "stack"), defaults to "identity". Warning: "stack" does not
work with \code{animate_plotly()} at the moment.}

\item{do_add_rug}{Logical, weather or not to add the rug marks below the
density curves.}

\item{fixed_y}{Vector of length of the data, values to fix vertical height.
Typically related to but not an explanatory variable, for instance,
predicted Y, or residuals.}
}
\description{
Adds \code{geom_density()} and \code{geom_rug()} of the projected data. Density
\code{postion = "stack"} does not work with \code{animate_plotly()}, GH issue is open.
}
\examples{
dat <- scale_sd(tourr::flea[, 1:6])
clas <- tourr::flea$species
gt_path <- save_history(dat, grand_tour(), max = 3)

ggt <- ggtour(gt_path, dat) +
  proto_density(aes_args = list(color = clas, fill = clas)) +
  proto_basis1d()
\dontrun{
animate_plotly(ggt)
}

## proto_point.1d_fix_y:
# Fixed y values are useful for related values that are 
# not in the X variables, _eg_ predictions or residuals of you X space.
dummy_y <- as.integer(clas) + rnorm(nrow(dat))# \%>\% scale_sd
gt_path <- tourr::save_history(dat, grand_tour(), max_bases = 5)

ggt <- ggtour(gt_path, dat) +
  proto_basis1d("top2d") +
  proto_origin() + 
  proto_point.1d_fix_y(list(fill = clas, color = clas),
    fixed_y = dummy_y)
\dontrun{
animate_plotly(ggt)
}
}
\seealso{
Other ggtour proto functions: 
\code{\link{facet_wrap_tour}()},
\code{\link{ggtour}()},
\code{\link{proto_basis}()},
\code{\link{proto_default}()},
\code{\link{proto_hex}()},
\code{\link{proto_highlight}()},
\code{\link{proto_origin}()},
\code{\link{proto_point}()},
\code{\link{proto_text}()}

Other ggtour proto functions: 
\code{\link{facet_wrap_tour}()},
\code{\link{ggtour}()},
\code{\link{proto_basis}()},
\code{\link{proto_default}()},
\code{\link{proto_hex}()},
\code{\link{proto_highlight}()},
\code{\link{proto_origin}()},
\code{\link{proto_point}()},
\code{\link{proto_text}()}
}
\concept{ggtour proto functions}
