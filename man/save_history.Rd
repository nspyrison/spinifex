% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/0_util.r
\name{save_history}
\alias{save_history}
\title{\subsection{<<experimental>> Mutes verbose functions, without suppressing warnings or error,}{
}

\subsection{wrapper function for .mute <- capture.output(x <- value)}{

#' @examples
#' ## mute assignment
#' mute(gt <- tourr::save_history(mtcars, max_bases = 3))
mute <- function(...){
.mute <- capture.output(
ret <- for (i in seq_len(...length())) {
out <- withVisible(...elt(i))
if (out$visible)
print(out$value)
}
)
}
A wrapper muting the output from \code{\link[tourr]{save_history}}
}}
\usage{
save_history(..., verbose = FLASE)
}
\arguments{
\item{...}{additional arguments passed to tour path}

\item{verbose}{Whether or not to suppress the text output byproduct from
\code{tourr::save_history()}. Defaults to FALSE.}
}
\description{
\subsection{<<experimental>> Mutes verbose functions, without suppressing warnings or error,}{
}

\subsection{wrapper function for .mute <- capture.output(x <- value)}{

#' @examples
#' ## mute assignment
#' mute(gt <- tourr::save_history(mtcars, max_bases = 3))
mute <- function(...){
.mute <- capture.output(
ret <- for (i in seq_len(...length())) {
out <- withVisible(...elt(i))
if (out$visible)
print(out$value)
}
)
}
A wrapper muting the output from \code{\link[tourr]{save_history}}
}
}
\examples{
tour_path <- save_history(data = wine[, 2:6], grand_tour(), max_bases = 10)
dim(tour_path)
}
